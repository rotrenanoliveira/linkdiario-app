// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum USER_ROLE {
  ADMIN
  USER
}

enum USER_STATUS {
  ACTIVE
  INACTIVE
  EXPIRED
}

enum CAMPAIGN_STATUS {
  NOT_PUBLISHED
  ACTIVE
  PAUSED
  REMOVED
  ENDED
}

enum CAMPAIGN_TYPE {
  PRESELL
  QUIZ
}

model User {
  id        String      @id @default(uuid())
  email     String      @unique
  fullName  String      @map("full_name")
  role      USER_ROLE   @default(USER)
  status    USER_STATUS @default(ACTIVE)
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime?   @updatedAt() @map("updated_at")

  access_code AccessCode[]
  company     Company?

  @@map("users")
}

model AccessCode {
  id        String    @id @default(uuid())
  code      String    @unique
  expiresAt DateTime  @map("expires_at")
  usedAt    DateTime? @map("used_at")
  userId    String    @map("user_id")
  createdAt DateTime  @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id])

  @@map("access_code")
}

model Company {
  id          String    @id @default(uuid())
  name        String
  slug        String    @unique
  description String
  logoUrl     String?
  contactId   String    @unique @map("contact_id")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @updatedAt() @map("updated_at")

  user      User       @relation(fields: [contactId], references: [id])
  campaigns Campaign[]

  @@map("companies")
}

model Campaign {
  id           String          @id @default(uuid())
  companyId    String          @map("company_id")
  status       CAMPAIGN_STATUS
  type         CAMPAIGN_TYPE
  affiliateUrl String          @map("affiliate_url")
  ctaText      String          @default("Saiba mais")
  ctaColor     String          @default("#FACC15")
  title        String
  subtitle     String
  slug         String
  name         String
  description  String?
  quiz         String?
  createdAt    DateTime        @default(now()) @map("created_at")
  startedAt    DateTime        @map("started_at")
  endedAt      DateTime?       @map("ended_at")
  updatedAt    DateTime?       @updatedAt() @map("updated_at")

  company     Company               @relation(fields: [companyId], references: [id])
  attachments CampaignAttachments[]

  @@map("campaigns")
}

model CampaignAttachments {
  id         String   @id @default(uuid())
  campaignId String   @map("campaign_id")
  name       String
  key        String
  createdAt  DateTime @default(now()) @map("created_at")

  campaign Campaign @relation(fields: [campaignId], references: [id])

  @@map("campaign_attachments")
}
